1:"$Sreact.fragment"
2:I[1483,["177","static/chunks/app/layout-52b0ed560d6aa9f9.js"],"ThemeProvider"]
3:I[7555,[],""]
4:I[1295,[],""]
6:I[9665,[],"OutletBoundary"]
9:I[4911,[],"AsyncMetadataOutlet"]
b:I[9665,[],"ViewportBoundary"]
d:I[9665,[],"MetadataBoundary"]
f:I[6614,[],""]
:HL["/_next/static/media/bb3ef058b751a6ad-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/media/e4af272ccee01ff0-s.p.woff2","font",{"crossOrigin":"","type":"font/woff2"}]
:HL["/_next/static/css/e167188080cc28a0.css","style"]
0:{"P":null,"b":"6vEOfzZF-IRjhNGGfWydB","p":"","c":["","projects","3",""],"i":false,"f":[[["",{"children":["projects",{"children":[["id","3","d"],{"children":["__PAGE__",{}]}]}]},"$undefined","$undefined",true],["",["$","$1","c",{"children":[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/e167188080cc28a0.css","precedence":"next","crossOrigin":"$undefined","nonce":"$undefined"}]],["$","html",null,{"lang":"en","suppressHydrationWarning":true,"children":["$","body",null,{"className":"__variable_e8ce0c __variable_3c557b font-sans antialiased","children":["$","$L2",null,{"attribute":"class","defaultTheme":"dark","enableSystem":true,"disableTransitionOnChange":false,"children":["$","div",null,{"className":"relative min-h-screen","children":["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":404}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],[]],"forbidden":"$undefined","unauthorized":"$undefined"}]}]}]}]}]]}],{"children":["projects",["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":[["id","3","d"],["$","$1","c",{"children":[null,["$","$L3",null,{"parallelRouterKey":"children","error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L4",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","forbidden":"$undefined","unauthorized":"$undefined"}]]}],{"children":["__PAGE__",["$","$1","c",{"children":["$L5",null,["$","$L6",null,{"children":["$L7","$L8",["$","$L9",null,{"promise":"$@a"}]]}]]}],{},null,false]},null,false]},null,false]},null,false],["$","$1","h",{"children":[null,["$","$1","pjoiQ2re0fS4fvlFQ6fogv",{"children":[["$","$Lb",null,{"children":"$Lc"}],["$","meta",null,{"name":"next-size-adjust","content":""}]]}],["$","$Ld",null,{"children":"$Le"}]]}],false]],"m":"$undefined","G":["$f","$undefined"],"s":false,"S":true}
10:"$Sreact.suspense"
11:I[4911,[],"AsyncMetadata"]
13:I[6207,["463","static/chunks/ede5dfc2-69aa18ef7f6a7d6f.js","732","static/chunks/732-68ee8a9996019d33.js","472","static/chunks/472-6e99f426b985ac0f.js","801","static/chunks/app/projects/%5Bid%5D/page-f462e4054a952713.js"],"default"]
e:["$","div",null,{"hidden":true,"children":["$","$10",null,{"fallback":null,"children":["$","$L11",null,{"promise":"$@12"}]}]}]
14:Td48,
The Car Recommendation System revolutionizes how customers discover and purchase vehicles by leveraging advanced machine learning algorithms and real-time data processing. This system provides personalized recommendations based on user behavior, preferences, and market trends.

## Machine Learning Architecture

### Collaborative Filtering with LightFM
- **Hybrid Approach**: Combines collaborative and content-based filtering
- **User-Item Matrix**: Sparse matrix factorization for scalability
- **Feature Engineering**: Rich user and item features for better recommendations
- **Cold Start Problem**: Effective handling of new users and vehicles
- **Model Training**: Regular retraining with fresh data

### Real-time Data Pipeline
- **Change Data Capture**: Debezium monitors database changes
- **Event Streaming**: Kafka processes user interactions in real-time
- **Feature Store**: Real-time feature computation and storage
- **Model Serving**: Low-latency inference for live recommendations
- **A/B Testing**: Continuous experimentation framework

## System Components

### Data Ingestion
- **User Interactions**: Clicks, views, test drives, purchases
- **Vehicle Inventory**: Real-time inventory updates
- **Market Data**: Pricing trends and competitor analysis
- **External APIs**: Third-party automotive data sources

### ML Pipeline
- **Data Preprocessing**: Feature extraction and normalization
- **Model Training**: Distributed training on Spark clusters
- **Model Validation**: Cross-validation and holdout testing
- **Model Deployment**: Containerized serving with auto-scaling
- **Performance Monitoring**: Real-time model performance tracking

### Recommendation API
- **Real-time Serving**: Sub-50ms response times
- **Personalization**: User-specific recommendations
- **Contextual Filtering**: Location, budget, and preference filters
- **Explanation**: Interpretable recommendations with reasoning
- **Fallback Strategy**: Content-based fallbacks for edge cases

## Technical Implementation

### LightFM Configuration
```python
# Hybrid matrix factorization model
model = LightFM(
    no_components=150,
    loss='warp',
    learning_rate=0.05,
    item_alpha=1e-6,
    user_alpha=1e-6
)

# Feature matrices for users and items
user_features = build_user_features(user_data)
item_features = build_item_features(vehicle_data)

# Training with user-item interactions
model.fit(
    interactions=interaction_matrix,
    user_features=user_features,
    item_features=item_features,
    epochs=50,
    num_threads=8
)
```

### Real-time Processing
- **Kafka Topics**: User events, inventory updates, recommendations
- **Stream Processing**: Kafka Streams for real-time aggregations
- **Feature Updates**: Live feature computation and caching
- **Model Updates**: Incremental learning for fresh recommendations

## Performance Metrics

- **Recommendation Accuracy**: 85% precision@10
- **Click-through Rate**: 12% improvement over baseline
- **Conversion Rate**: 8% increase in purchase conversions
- **Response Time**: <50ms for recommendation API
- **Data Freshness**: <1 second for real-time updates

## Business Impact

- **Revenue Increase**: 15% boost in sales attributed to recommendations
- **User Engagement**: 25% increase in time spent on platform
- **Inventory Turnover**: 20% faster vehicle sales
- **Customer Satisfaction**: 4.5/5 rating for recommendation quality
    5:["$","$L13",null,{"project":{"id":3,"title":"Car Recommendation System","description":"ML-powered recommendation engine using LightFM with real-time data processing through Apache Kafka and Debezium CDC pipelines.","longDescription":"$14","category":"AI/ML","technologies":["Python","LightFM","Apache Kafka","gRPC","AWS","Spark","Redis","Docker"],"image":"/api/placeholder/600/400","liveUrl":null,"githubUrl":null,"featured":true,"status":"Completed","timeline":"8 months","team":"5 engineers","role":"ML Engineer","company":"Spinny","year":"2022","challenges":["Building scalable real-time recommendation system","Handling cold start problem for new users and vehicles","Optimizing LightFM model for sub-50ms inference","Implementing effective A/B testing framework"],"achievements":["Achieved 85% precision@10 in recommendations","Increased conversion rate by 8%","Maintained <50ms API response times","Generated 15% revenue increase through personalization"],"keyTechnologies":{"Python":"Core language for ML pipeline development","LightFM":"Hybrid recommendation algorithm","Apache Kafka":"Real-time event streaming and processing","gRPC":"High-performance API communication","AWS":"Cloud infrastructure for scalable deployment","Spark":"Distributed computing for large-scale training","Redis":"Feature store and caching layer"}}}]
8:null
c:[["$","meta","0",{"charSet":"utf-8"}],["$","meta","1",{"name":"viewport","content":"width=device-width, initial-scale=1"}]]
7:null
a:{"metadata":[["$","title","0",{"children":"Software Developer Portfolio"}],["$","meta","1",{"name":"description","content":"Modern portfolio showcasing innovative software development projects and expertise."}],["$","meta","2",{"name":"author","content":"Software Developer"}],["$","meta","3",{"name":"keywords","content":"software developer,portfolio,web development,full stack,technology"}],["$","meta","4",{"property":"og:title","content":"Software Developer Portfolio"}],["$","meta","5",{"property":"og:description","content":"Modern portfolio showcasing innovative software development projects and expertise."}],["$","meta","6",{"property":"og:type","content":"website"}],["$","meta","7",{"name":"twitter:card","content":"summary"}],["$","meta","8",{"name":"twitter:title","content":"Software Developer Portfolio"}],["$","meta","9",{"name":"twitter:description","content":"Modern portfolio showcasing innovative software development projects and expertise."}],["$","link","10",{"rel":"icon","href":"/favicon.ico","type":"image/x-icon","sizes":"16x16"}]],"error":null,"digest":"$undefined"}
12:{"metadata":"$a:metadata","error":null,"digest":"$undefined"}
